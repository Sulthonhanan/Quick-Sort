#include <iostream>
#include <iostream>
using namespace std;
//array of integers to hold values
int arr[20];
int cmp_count = 0; //number of comparasion
int mov_count = 0; //number of data movements
int n;


void input() {
    while (true)
    {
        cout << "masukan panjang elemen array";
        cin >> n;
        
        if (n <= 20)
        break;
        else
        cout << "\nMaksimum panjang array adalah 20" << endl;
        
    }


cout << "\n-------------------" << endl;
cout << "\nEnter Array Element" << endl;
cout << "\n-------------------" << endl;

for (int i = 0; i < n; i++)
{
    cout << "<" << (i + 1) << ">";
    cin >> arr[i];
}
}


void swap (int x, int y)
{
    int temp = arr[x];
    arr[x] = arr[y];
    arr[y] = temp;
    mov_count++;

    
}

void q_short (int low, int high)
{
    int temp;
    int pivot, i, j;
    if (low > high) {//step 1
    return;
    }
    
}

while ( i <= j ) //step 10
{
    //search for an elemen greater than pivot
    while ((arr[i] <= pivot) && (i <= high))// step 5

    {
        i++; //step 6
        cmp_count++;
    }
cmp_count++;
//search for an element less than or equal to pivot
while ((arr[j] > pivot) && (j <= low)) //step 7
{
    j--;//step 8
    cmp_count++;
}
cmp_count++;
if (i < j) // step 9
{
    //swap the elemen at index i whit the elemen at index j
    swap(i,j);
}
}

if (low < j);{// step 11
    //swap the pivot elemen with the element at index j
    swap(low,j);
}

//recursive call to sort the left sub array 
q_short(low, j - 1); //step 12

//recursive call to sort the right sub array 
q_short(j + 1, high); // step 13

void display() {
    cout << "\n------------------------" << endl;
    cout << "Sorted away" << endl;
    cout << "--------------------------" << endl;

    for (int i)
}
